        -:    0:Source:testme.c
        -:    0:Graph:testme.gcno
        -:    0:Data:testme.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    0:Source is newer than graph
        -:    1:#include<stdio.h>
        -:    2:#include<string.h>
        -:    3:#include<stdlib.h>
        -:    4:#include<time.h>
        -:    5:
    46217:    6:char inputChar()
        -:    7:{
        -:    8:    // TODO: rewrite this function
    46217:    9:    return rand() % (125 + 1 - 32) + 32;
        -:   10:}
        -:   11:
    46217:   12:char *inputString()
        -:   13:{
        -:   14:    // TODO: rewrite this function
        -:   15:    static char string[6];
        -:   16:    
        -:   17:    int i;
    46217:   18:    int max = 122;
    46217:   19:    int min = 97;
        -:   20:	
        -:   21:    char c;
        -:   22:
   277302:   23:    for(i = 0; i < 5; i++){
   231085:   24:	c = rand() % (max + 1 - min) + min;
        -:   25:
   231085:   26:	if(c == 'r'){
     8918:   27:		min = 101;
     8918:   28:		max = 116;
        -:   29:	}
   222167:   30:	else if(c == 'e')
     8820:   31:		min = 115;
   213347:   32:	else if(c == 's')
    11035:   33:		min = 101;
        -:   34:
   231085:   35:	string[i] = c; 		
        -:   36:    }
    46217:   37:    string[5] = '\0';
    46217:   38:    return string;
        -:   39:}
        -:   40:
        2:   41:void testme()
        -:   42:{
        2:   43:  int tcCount = 0;
        -:   44:  char *s;
        -:   45:  char c;
        2:   46:  int state = 0;
        -:   47:  while (1)
        -:   48:  {
    46217:   49:    tcCount++;
    46217:   50:    c = inputChar();
    46217:   51:    s = inputString();
    46217:   52:    printf("Iteration %d: c = %c, s = %s, state = %d\n", tcCount, c, s, state);
        -:   53:
    46217:   54:    if (c == '[' && state == 0) state = 1;
    46217:   55:    if (c == '(' && state == 1) state = 2;
    46217:   56:    if (c == '{' && state == 2) state = 3;
    46217:   57:    if (c == ' ' && state == 3) state = 4;
    46217:   58:    if (c == 'a' && state == 4) state = 5;
    46217:   59:    if (c == 'x' && state == 5) state = 6;
    46217:   60:    if (c == '}' && state == 6) state = 7;
    46217:   61:    if (c == ')' && state == 7) state = 8;
    46217:   62:    if (c == ']' && state == 8) state = 9;
    46217:   63:    if (s[0] == 'r' && s[1] == 'e'
      109:   64:       && s[2] == 's' && s[3] == 'e'
        3:   65:       && s[4] == 't' && s[5] == '\0'
        2:   66:       && state == 9)
        -:   67:    {
        2:   68:      printf("error ");
        2:   69:      exit(200);
        -:   70:    }
    46215:   71:  }
        -:   72:}
        -:   73:
        -:   74:
        2:   75:int main(int argc, char *argv[])
        -:   76:{
        2:   77:    srand(time(NULL));
        2:   78:    testme();
    #####:   79:    return 0;
        -:   80:}
